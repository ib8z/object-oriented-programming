/*
تعريف الكائن كثابت:
اذا أردت إنشاء كائن ثابت بمعنى أنه لا يمكن تغيير قيمة أي خاصية موجودة فيه فيمكنك إنشاء الكائن ككائن ثابت.
عند إنشاء كائن ثابت من كلاس لا يمكنك استدعاء أي دالة في الكلاس تتعامل مع أحد الخصائص الموجودة فيه إلا إذا قمت بجعل الدالة من الأساس ثابتة أيضاً.

عندما تعرف كائن عادي يستطيع ان يصل الى الدالة المعرفة ك const
يعني يقدر يستخدمها ,ولاكن العكس صحيح الكائن ال const
لا يستخدم الى دوال const 
*/



/*
في المثال التالي قمنا بتعريف كلاس إسمه Person
يحتوي على خاصيتين إسمهما 
name و age
كخصائص عادية

كما أننا قمنا بتعريف كونستركتور يسمح لنا بتمرير قيم للخصائص 
name و age
و دالة ثابتة يمكن استخدامها لعرض قيمهما
*/
#include <iostream>
using namespace std;


// Person هنا قمنا بإنشاء كلاس إسمه
class Person
{
public:
    // هنا قمنا بتعريف الخصائص
    string name;
    int age;

    // هنا قمنا بتعريف الكونستركتور الذي يسمح لنا بتمرير قيم للخصائص عند تعريف الكائن
    // لأنه يجب أن نمرر قيم أولية لكل خصائص الكائن في حال كنا سننشئه ككائن ثابت
    Person(string name, int age)
    {
        this->name = name;
        this->age = age;
    }
        
    // كدالة ثابتة حتى نتمكن من استدعاءها في حال قمنا إنشاء كائن ثابت من الكلاس gprint() هنا قمنا بتعريف الدالة
    void gprint() const
    {
        cout << "Name: " << this->name << endl;
        cout << "Age: "  << this->age << endl;
    }
};




int main()
{
    // هنا قمنا بأنشاء كائن واعطائه قيم
    const Person P1("GK", 21);

    // هنا استدعينا الدالة لكي تعرض المعلومات
    P1.gprint();

    return 0;
}
