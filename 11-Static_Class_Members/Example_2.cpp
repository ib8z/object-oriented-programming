/*
الدوال المشتركة:
فكرة الدوال المشتركة ببساطة هي تعريف دالة في كلاس يمكن استدعاءها بشكل مباشر منه بدون الحاجة لإنشاء كائن من الكلاس حتى تستدعي هذه الدالة
اي استدعاء الميثود (الدالة الخاصة بالكلاس) بدون كائن
الدالة التي يتم تعريفها كدالة مشتركة يمكنها فقط التعامل مع المتغيرات المشتركة, أي التي نوعها static

بالنسبة لطريقة تعريف دالة مشتركة فهي نفسها طريقة تعريف دالة عادية مع إضافة الكلمة static
*/




/*
في المثال التالي:
انشئنا متغير و دالة مشتركين لمعرفة عدد الكائنات التي موجودة حاليا

قمنا بتعريف كلاس إسمه Test
يحتوي على متغير مشترك إسمه counter
و دالة مشتركة إسمها Number_Object
عند استدعاءها تقوم بإرجاع قيمة المتغير counter

في الكلاس Test
قمنا بتعديل الكونستركتور الإفتراضي لجعله يقوم بزيادة عدد قيمته 1
على قيمة المتغير counter
كلما تم انشاء كائن من الكلاس


وفي destructor 
قمنا ب طرح 1 من المتغير counter
لان نريد ان نعرف عدد الكائنات الان
*/
#include <iostream>
using namespace std;


class Test 
{
public:
    // هنا قمنا بتعريف المتغير المشترك والذي سوف يخزن عدد الكائنات
    static int counter;
        
    // هنا عرفنا constructor
    Test()
    {
        counter++;
    }
        
    // هنا عرفنا ال destructor 
    ~Test()
    {
        counter--;
    }

    // هنا عرفنا الدالة التي سوف ترجع عدد الكائنات
    static int Number_Object()
    {
        return counter;
    }

};

// القيمة 0 كقيمة أولية counter هنا قمنا بإعطاء المتغير المشترك
int Test::counter = 0;



int main()
{
    //هنا كائنات من الكلاس Test 
    Test T1 ,T2 ,T3 ,T4 ,T5 ,T6 ,T7 ,T8 ,T9;
    
    // counter هنا طبعنا عدد الكائنات الموجودة حاليا من خلال استدعاء الدالة التي سوف ترجع قيمة المتغير المشترك 
    cout << "\nTotal Object: " << Test::Number_Object() << endl;

    return 0;
}