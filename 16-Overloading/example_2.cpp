/*
مثال حول تعريف أكثر من كونستركتور في الكلاس:

في المثال التالي قمنا بتعريف كلاس إسمه Person
يحمل ثلاث خصائص وهي : الاسم والعمر و الوظيفة.

اول الكونستركتور لا يأخذ باراميتر ويعطي قيم افتراضية للخصائص
الكونستركتور الثاني يأخذ باراميتر واحد وهو يعطيه للاسم.
الكونستركتور الثالث يأخذ إثنين باراميتر يعطيه للاسم و العمر.
الكونستركتور الرابع تأخذ ثلاثة باراميترات يعطيه للاسم والعمر و الوظيفة.

وبعدها انشئنا دالة لكي تعرض المعلومات
*/
#include <iostream>
using namespace std;


// هنا قمنا بتعريف الكلاس Person
class Person
{
public:
    // هنا انشئنا الخصائص
    string name;
    int age;
    string Job;
 
    // الكونستركتور الأول لا يأخذ باراميترات
    Person()
    {
        name = "";
        age = 0;
        Job = "";
    }
 
    // الكونستركتور يأخذ بارميتر للاسم
    Person(string name)
    {
        this->name = name;
        age = 0;
        Job = "";
    }
 
    // الكونستركتور يأخذ بارميتر للاسم و العمر 
    Person(string name ,int age)
    {
        this->name = name;
        this->age = age;
        Job = "";
    }
    
    // الكونستركتور يأخذ بارميتر للاسم و العمر و الوظيفة
    Person(string name ,int age , string Job)
    {
        this->name = name;
        this->age = age;
        this->Job = Job;   
    }
    
    // انشئنا الدالة هذه لعرض المعلومات
    void gprint()
    {
        cout << "name: " << name << endl;
        cout << "age: " << age << endl;
        cout << "Job: " << Job << "\n\n";
    }
};
 
 


int main()
{
    Person C1;  // هنا سيتم إستدعاء الكونستركور الأول الذي لا يأخذ بارميتير
    Person C2("GK");    // هنا سيتم إستدعاء الكونستركور الثاني الذي يأخذ بارميتير للاسم فقط
    Person C3("Mohammed", 26);  // هنا سيتم إستدعاء الكونستركور الثالث الذي يأخذ بارميتير للاسم والعمر
    Person C4("Ali", 30, "Programmer");    // هنا سيتم إستدعاء الكونستركور الرابع الذي يأخذ بارميتير للاسم والعمر والوظيفة
    

    // لجميع الكائنات gprint() هنا قمنا باستدعاء الدالة
    C1.gprint();
    C2.gprint();
    C3.gprint();
    C4.gprint();
 
return 0;
}